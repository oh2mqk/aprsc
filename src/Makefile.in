#
# APRSC
#

# -------------------------------------------------------------------- #
# target paths

VARRUN=		/var/run	# directory for aprx.state and pid-file
VARLOG=		/var/log/aprsc	# directory for direct logfiles
CFGFILE=	@sysconfdir@/aprsc.conf	# default configuration file
SBINDIR=	@sbindir@	# installation path for programs
MANDIR=		@mandir@	# installation path for manual pages

# -------------------------------------------------------------------- #

srcdir = @srcdir@
VPATH = @srcdir@
@SET_MAKE@

# Compiler and flags
CC=		@CC@
PROF=
CFLAGS=		@CFLAGS@ @CPPFLAGS@ $(PROF) $(DEFS)

# On solaris, should use -D_REENTRANT  CFLAGS

# Linker and flags
LD=		@LD@
LDFLAGS=	@LDFLAGS@ $(PROF)

INSTALL=	$(srcdir)/install-sh
INSTALL_PROGRAM=$(INSTALL)  -m 755
INSTALL_DATA=	$(INSTALL)  -m 644

LIBS=		@LIBEVENT@ @LIBM@ @LIBPTHREAD@ @LIBSOCKET@ @LIBGETNAMEINFO@

#LIBS += -L/data/www/mapt1/extsrc/libevent-2.0.14-stable/installed/usr/local/lib
#CFLAGS += -I/data/www/mapt1/extsrc/libevent-2.0.14-stable/installed/usr/local/include


# Linux:
# -lpthread
# Solaris 2.8:
# -lpthread -lxnet -lsocket -lnss -lrt
# Solaris 2.6:
# -lpthread -lxnet -lsocket -lnsl -lposix4 -lresolv

# -------------------------------------------------------------------- #

DEFS=	-Wall -Wstrict-prototypes -D_REENTRANT


# -------------------------------------------------------------------- #

.PHONY: 	all clean distclean valgrind profile

all: aprsc


### "valgrind" is not for running the valgrind, rather for compiling
### the software so that internal cellmalloc et.al. are disabled.

valgrind:
	@echo "Did you do 'make clean' before 'make valgrind' ?"
	make all CFLAGS="${CFLAGS} -D_FOR_VALGRIND_"

profile:
	@echo "Did you do 'make clean' before 'make profile' ?"
	make all PROF=-pg


# -------------------------------------------------------------------- #

DATAMODE = 0644
DATAINSTALL = install --preserve-timestamps -m $(DATAMODE)

WEBFILES = \
	src/web/aprsc.css src/web/aprsc.js \
	src/web/index.html \
	src/web/*.png

testinstall:
	$(DATAINSTALL) $(WEBFILES) ../tests/web/

# -------------------------------------------------------------------- #

OBJS = aprsc.o accept.o worker.o \
	login.o incoming.o dupecheck.o outgoing.o \
	clientlist.o client_heard.o \
	parse_aprs.o parse_qc.o \
	config.o netlib.o xpoll.o acl.o \
	cfgfile.o passcode.o uplink.o \
	rwlock.o hmalloc.o hlog.o \
	keyhash.o \
	filter.o cellmalloc.o historydb.o \
	status.o cJSON.o \
	http.o \
	@LIBOBJS@

clean:
	rm -f *.o *~ */*~ core *.d

distclean: clean
	rm -f aprsc
	rm -f ac-hdrs.h Makefile config.log config.status
	rm -rf autom4te.cache

aprsc: $(OBJS)
	$(LD) $(LDFLAGS) -g -o aprsc $(OBJS) $(LIBS)

%.o: %.c VERSION Makefile
	$(CC) $(CFLAGS) -c $<
	@$(CC) -MM $(CFLAGS) $< > $(@:.o=.d)

# include object depencies if available
-include $(OBJS:.o=.d)
